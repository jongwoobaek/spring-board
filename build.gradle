buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0' // 스프링 부트 플러그인 적용, 버전은 3.1.9
	id 'io.spring.dependency-management' version '1.1.0' // 스프링 의존성 관리 플러그인, 버전 1.1.4
}

group = 'com.ssg' // 프로젝트의 그룹 ID 설정
version = '0.0.1-SNAPSHOT' // 프로젝트 버전 설정

java {
	sourceCompatibility = '17' // 사용할 Java 버전 설정
}



configurations {
	compileOnly {
		extendsFrom annotationProcessor // 컴파일 시간 의존성을 애노테이션 프로세서 의존성과 연결
	}
}

repositories {
	mavenCentral() // Maven 중앙 저장소 사용 설정
}

dependencies {
	// 필요한 라이브러리 의존성을 명시
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA를 위한 스프링 부트 스타터
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // Thymeleaf 템플릿 엔진을 위한 스타터
	implementation 'org.springframework.boot:spring-boot-starter-web' // 웹 애플리케이션 개발을 위한 스타터
	compileOnly 'org.projectlombok:lombok' // Lombok, 컴파일 시에만 필요
	developmentOnly 'org.springframework.boot:spring-boot-devtools' // 개발 중에만 필요한 스프링 부트 개발 도구
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // 런타임에서만 필요한 MariaDB JDBC 클라이언트
	annotationProcessor 'org.projectlombok:lombok' // Lombok을 위한 애노테이션 프로세서
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // 테스팅을 위한 스프링 부트 스타터

	testCompileOnly 'org.projectlombok:lombok' // 테스트 환경에서는 룸북 사용이 안되어서 테스트환경에서 사용시 필요
	testAnnotationProcessor 'org.projectlombok:lombok'

	implementation 'org.modelmapper:modelmapper:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'

	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor(
			"jakarta.persistence:jakarta.persistence-api",
			"jakarta.annotation:jakarta.annotation-api",
			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	implementation 'net.coobird:thumbnailator:0.4.16'

	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest' // Spring Boot 이미지 빌드를 위한 빌더 설정
}

tasks.named('test') {
	useJUnitPlatform() // JUnit 플랫폼을 사용하여 테스트 실행 설정
}
sourceSets {

	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}
compileJava.dependsOn('clean')